// Generated by BUCKLESCRIPT VERSION 5.0.3, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Content = require("./Content.bs.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

function let_(value, fn) {
  if (value !== undefined) {
    return Curry._1(fn, Caml_option.valFromOption(value));
  } else {
    return React.createElement("div", undefined, "Loading...");
  }
}

var Loading = /* module */Block.localModule(["let_"], [let_]);

function App$App(Props) {
  var match = React.useReducer((function (param, action) {
          return Caml_option.some(action);
        }), undefined);
  var setNav = match[1];
  React.useEffect((function () {
          Content.nav.then((function (result) {
                  Curry._1(setNav, result);
                  return Promise.resolve(/* () */0);
                }));
          return undefined;
        }), ([]));
  return let_(match[0], (function (nav) {
                console.log("nav", nav);
                return React.createElement("div", undefined, "Hello");
              }));
}

var App = /* module */Block.localModule(["make"], [App$App]);

ReactDOMRe.renderToElementWithId(React.createElement(App$App, { }), "root");

exports.Loading = Loading;
exports.App = App;
/*  Not a pure module */
